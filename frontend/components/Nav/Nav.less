.navbar {
  z-index: 1;
  .fontSize(100, 10);
  width: 100%;
  height: 1em;
  position: absolute;
  background-color: transparent;
  color: @main-text-color;
  font: bold @fontSize 'Honey Script';
  display: flex;
  align-items: center;
  justify-content: space-around;
}

.navbar_fixed {
  position: fixed;
  background-color: @main-text-color;
  color: @inverse-text-color;
  transition: background-color .1s ease-out;

  .navbar-toggle__dash {
    background-color: @inverse-text-color;
  }
}

.logo {
  .fontSize(50, 100);
  font: normal @fontSize 'Honey Script';
  transition: color .4s ease-out;
  cursor: pointer;

  &::selection {
    &:extend(.selected-text);
  }
}

.navbar__logo {
}

.navs {
  .fontSize(14, 100);
  font: normal @fontSize 'Open Sans', sans-serif;
  list-style: none;
  display: flex;
  align-items: center;
  // need this cause of initial value
  -webkit-padding-start: 0;
}

.navs__nav-item {
}

.nav-item {
  display: inline-block;
  position: relative;
  .fontSize(20, 14);
  padding-right: @fontSize;
  // write like this, cause of we need to calculate the transition-delay based
  // on elem index. Shorthand style will override calculated prop. If we set
  // delay after adding this class to elem - delay will be added after second
  // show stage, that`s unacceptable
  transition-property: all;
  transition-duration: .4s;
  transition-timing-function: ease-out;

  &_seo-friendly-hide {
    transform: translate3d(0, -100%, 0);
    opacity: .2;
    visibility: hidden;
  }
}

.navs__link {
  display: inline-block;
  text-decoration: none;
  color: inherit;
  .fontSize(10, 14);
  padding: @fontSize;

  &::selection {
    &:extend(.selected-text);
  }
}

.navbar-toggle-wrapper {
  .fontSize(45, 14);
  width: @fontSize;
  height: 36 / 14 * 1em; // need to do this, cause the @fontSize var is already exist
  padding: 10 / 14 * 1em;
  cursor: pointer;
}

.navbar-toggle {
  .fontSize(25, 14);
  width: @fontSize;
  position: relative;
  height: 16 / 14 * 1em; // need to do this, cause the @fontSize var is already exist
}

.navbar-toggle__dash {
  .fontSize(2, 14);
  height: @fontSize;
  width: 100%;
  position: absolute;
  background-color: @main-text-color;
  transition: .3s background-color ease-out;
}

.navbar-toggle__dash_top {
  top: 0;
  &:extend(.dash-transition-opacity);
}

.navbar-toggle__dash_middle {
  top: 50%;
  transform: translateY(-50%);
  transform-style: preserve-3d;
  transition: transform .3s ease-out,
    background-color .3s ease-out;
}

.navbar-toggle__dash_middle_clockwise {
  transform: translateY(-50%)
    rotateZ(45deg);
  &:extend(.dash-transition-transform);
}

.navbar-toggle__dash_middle_conter-clockwise {
  transform: translateY(-50%)
    rotateZ(-45deg);
  &:extend(.dash-transition-transform);
}

.dash-transition-transform {
  /*this transition means that we get to that state in .3s with delay*/
  transition: transform .3s ease-out .26s;
}

.navbar-toggle__dash_bottom {
  bottom: 0;
  &:extend(.dash-transition-opacity);
}

.dash-transition-opacity {
  transition: opacity .3s ease-out .15s,
    background-color .3s ease-out;
}

.navbar-toggle-wrapper_clicked {
  .navbar-toggle__dash_top, .navbar-toggle__dash_bottom {
    opacity: 0;
  }
}
